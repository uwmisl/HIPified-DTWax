# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: minknow_api/instance.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from minknow_api import acquisition_pb2 as minknow__api_dot_acquisition__pb2
from minknow_api import device_pb2 as minknow__api_dot_device__pb2
from minknow_api import protocol_pb2 as minknow__api_dot_protocol__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1aminknow_api/instance.proto\x12\x14minknow_api.instance\x1a\x1dminknow_api/acquisition.proto\x1a\x18minknow_api/device.proto\x1a\x1aminknow_api/protocol.proto\"\x17\n\x15GetVersionInfoRequest\"\x90\x05\n\x16GetVersionInfoResponse\x12L\n\x07minknow\x18\x01 \x01(\x0b\x32;.minknow_api.instance.GetVersionInfoResponse.MinknowVersion\x12\r\n\x05\x62ream\x18\x02 \x01(\t\x12\x1c\n\x14\x64istribution_version\x18\x03 \x01(\t\x12\\\n\x13\x64istribution_status\x18\x04 \x01(\x0e\x32?.minknow_api.instance.GetVersionInfoResponse.DistributionStatus\x12\x1e\n\x16protocol_configuration\x18\x05 \x01(\t\x12X\n\x11installation_type\x18\x06 \x01(\x0e\x32=.minknow_api.instance.GetVersionInfoResponse.InstallationType\x12\x1b\n\x13guppy_build_version\x18\x07 \x01(\t\x12\x1f\n\x17guppy_connected_version\x18\x08 \x01(\t\x1aK\n\x0eMinknowVersion\x12\r\n\x05major\x18\x01 \x01(\x05\x12\r\n\x05minor\x18\x02 \x01(\x05\x12\r\n\x05patch\x18\x03 \x01(\x05\x12\x0c\n\x04\x66ull\x18\x04 \x01(\t\"I\n\x12\x44istributionStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06STABLE\x10\x01\x12\x0c\n\x08UNSTABLE\x10\x02\x12\x0c\n\x08MODIFIED\x10\x03\"M\n\x10InstallationType\x12\x07\n\x03ONT\x10\x00\x12\x06\n\x02NC\x10\x01\x12\x08\n\x04PROD\x10\x02\x12\r\n\tQ_RELEASE\x10\x03\x12\x0f\n\x0bOND_RELEASE\x10\x04\"\x1d\n\x1bGetOutputDirectoriesRequest\"?\n\x11OutputDirectories\x12\x0e\n\x06output\x18\x01 \x01(\t\x12\x0b\n\x03log\x18\x02 \x01(\t\x12\r\n\x05reads\x18\x03 \x01(\t\"$\n\"GetDefaultOutputDirectoriesRequest\")\n\x19SetOutputDirectoryRequest\x12\x0c\n\x04path\x18\x01 \x01(\t\"\x1c\n\x1aSetOutputDirectoryResponse\"(\n\x18SetReadsDirectoryRequest\x12\x0c\n\x04path\x18\x01 \x01(\t\"\x1b\n\x19SetReadsDirectoryResponse\"\xfa\x01\n\x17\x46ilesystemDiskSpaceInfo\x12\x15\n\rfilesystem_id\x18\x01 \x01(\t\x12\x17\n\x0f\x62ytes_available\x18\x02 \x01(\x04\x12\x16\n\x0e\x62ytes_capacity\x18\x03 \x01(\x04\x12\x0c\n\x04what\x18\x04 \x03(\t\x12\x1d\n\x15\x62ytes_to_stop_cleanly\x18\x05 \x01(\x04\x12\x1f\n\x17\x62ytes_when_alert_issued\x18\x06 \x01(\x04\x12\x17\n\x0frecommend_alert\x18\x07 \x01(\x08\x12\x16\n\x0erecommend_stop\x18\x08 \x01(\x08\x12\x18\n\x10\x62ytes_per_second\x18\t \x01(\x03\"\x19\n\x17GetDiskSpaceInfoRequest\",\n\x1aStreamDiskSpaceInfoRequest\x12\x0e\n\x06period\x18\x01 \x01(\r\"m\n\x18GetDiskSpaceInfoResponse\x12Q\n\x1a\x66ilesystem_disk_space_info\x18\x01 \x03(\x0b\x32-.minknow_api.instance.FilesystemDiskSpaceInfo\"\x15\n\x13GetMachineIdRequest\"*\n\x14GetMachineIdResponse\x12\x12\n\nmachine_id\x18\x01 \x01(\t\"\x1f\n\x1dStreamInstanceActivityRequest\"\x9a\x01\n\nDeviceInfo\x12L\n\x0c\x64\x65vice_state\x18\x01 \x01(\x0e\x32\x36.minknow_api.device.GetDeviceStateResponse.DeviceState\x12>\n\x0b\x64\x65vice_info\x18\x02 \x01(\x0b\x32).minknow_api.device.GetDeviceInfoResponse\",\n\rBasecallSpeed\x12\x1b\n\x13mean_basecall_speed\x18\x01 \x01(\x02\"\x12\n\x03N50\x12\x0b\n\x03n50\x18\x01 \x01(\x02\"\xaf\x06\n\x1eStreamInstanceActivityResponse\x12\x37\n\x0b\x64\x65vice_info\x18\x01 \x01(\x0b\x32 .minknow_api.instance.DeviceInfoH\x00\x12\x45\n\x0e\x66low_cell_info\x18\x02 \x01(\x0b\x32+.minknow_api.device.GetFlowCellInfoResponseH\x00\x12\x42\n\x11protocol_run_info\x18\x03 \x01(\x0b\x32%.minknow_api.protocol.ProtocolRunInfoH\x00\x12K\n\x14\x61\x63quisition_run_info\x18\x04 \x01(\x0b\x32+.minknow_api.acquisition.AcquisitionRunInfoH\x00\x12_\n\x10\x66low_cell_health\x18\x05 \x01(\x0b\x32\x43.minknow_api.instance.StreamInstanceActivityResponse.FlowCellHealthH\x00\x12I\n\ryield_summary\x18\x06 \x01(\x0b\x32\x30.minknow_api.acquisition.AcquisitionYieldSummaryH\x00\x12=\n\x0e\x62\x61secall_speed\x18\x07 \x01(\x0b\x32#.minknow_api.instance.BasecallSpeedH\x00\x12(\n\x03n50\x18\x08 \x01(\x0b\x32\x19.minknow_api.instance.N50H\x00\x1a\xd6\x01\n\x0e\x46lowCellHealth\x12\x83\x01\n\x19\x63hannel_state_percentages\x18\x01 \x03(\x0b\x32`.minknow_api.instance.StreamInstanceActivityResponse.FlowCellHealth.ChannelStatePercentagesEntry\x1a>\n\x1c\x43hannelStatePercentagesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\x42\x0e\n\x0cstream_value2\x84\t\n\x0fInstanceService\x12r\n\x10get_version_info\x12+.minknow_api.instance.GetVersionInfoRequest\x1a,.minknow_api.instance.GetVersionInfoResponse\"\x03\x90\x02\x01\x12y\n\x16get_output_directories\x12\x31.minknow_api.instance.GetOutputDirectoriesRequest\x1a\'.minknow_api.instance.OutputDirectories\"\x03\x90\x02\x01\x12\x88\x01\n\x1eget_default_output_directories\x12\x38.minknow_api.instance.GetDefaultOutputDirectoriesRequest\x1a\'.minknow_api.instance.OutputDirectories\"\x03\x90\x02\x01\x12~\n\x14set_output_directory\x12/.minknow_api.instance.SetOutputDirectoryRequest\x1a\x30.minknow_api.instance.SetOutputDirectoryResponse\"\x03\x90\x02\x02\x12{\n\x13set_reads_directory\x12..minknow_api.instance.SetReadsDirectoryRequest\x1a/.minknow_api.instance.SetReadsDirectoryResponse\"\x03\x90\x02\x02\x12y\n\x13get_disk_space_info\x12-.minknow_api.instance.GetDiskSpaceInfoRequest\x1a..minknow_api.instance.GetDiskSpaceInfoResponse\"\x03\x90\x02\x01\x12\x81\x01\n\x16stream_disk_space_info\x12\x30.minknow_api.instance.StreamDiskSpaceInfoRequest\x1a..minknow_api.instance.GetDiskSpaceInfoResponse\"\x03\x90\x02\x01\x30\x01\x12l\n\x0eget_machine_id\x12).minknow_api.instance.GetMachineIdRequest\x1a*.minknow_api.instance.GetMachineIdResponse\"\x03\x90\x02\x01\x12\x8c\x01\n\x18stream_instance_activity\x12\x33.minknow_api.instance.StreamInstanceActivityRequest\x1a\x34.minknow_api.instance.StreamInstanceActivityResponse\"\x03\x90\x02\x01\x30\x01\x42&\n\x1c\x63om.nanoporetech.minknow_api\xa2\x02\x05MKAPIb\x06proto3')



_GETVERSIONINFOREQUEST = DESCRIPTOR.message_types_by_name['GetVersionInfoRequest']
_GETVERSIONINFORESPONSE = DESCRIPTOR.message_types_by_name['GetVersionInfoResponse']
_GETVERSIONINFORESPONSE_MINKNOWVERSION = _GETVERSIONINFORESPONSE.nested_types_by_name['MinknowVersion']
_GETOUTPUTDIRECTORIESREQUEST = DESCRIPTOR.message_types_by_name['GetOutputDirectoriesRequest']
_OUTPUTDIRECTORIES = DESCRIPTOR.message_types_by_name['OutputDirectories']
_GETDEFAULTOUTPUTDIRECTORIESREQUEST = DESCRIPTOR.message_types_by_name['GetDefaultOutputDirectoriesRequest']
_SETOUTPUTDIRECTORYREQUEST = DESCRIPTOR.message_types_by_name['SetOutputDirectoryRequest']
_SETOUTPUTDIRECTORYRESPONSE = DESCRIPTOR.message_types_by_name['SetOutputDirectoryResponse']
_SETREADSDIRECTORYREQUEST = DESCRIPTOR.message_types_by_name['SetReadsDirectoryRequest']
_SETREADSDIRECTORYRESPONSE = DESCRIPTOR.message_types_by_name['SetReadsDirectoryResponse']
_FILESYSTEMDISKSPACEINFO = DESCRIPTOR.message_types_by_name['FilesystemDiskSpaceInfo']
_GETDISKSPACEINFOREQUEST = DESCRIPTOR.message_types_by_name['GetDiskSpaceInfoRequest']
_STREAMDISKSPACEINFOREQUEST = DESCRIPTOR.message_types_by_name['StreamDiskSpaceInfoRequest']
_GETDISKSPACEINFORESPONSE = DESCRIPTOR.message_types_by_name['GetDiskSpaceInfoResponse']
_GETMACHINEIDREQUEST = DESCRIPTOR.message_types_by_name['GetMachineIdRequest']
_GETMACHINEIDRESPONSE = DESCRIPTOR.message_types_by_name['GetMachineIdResponse']
_STREAMINSTANCEACTIVITYREQUEST = DESCRIPTOR.message_types_by_name['StreamInstanceActivityRequest']
_DEVICEINFO = DESCRIPTOR.message_types_by_name['DeviceInfo']
_BASECALLSPEED = DESCRIPTOR.message_types_by_name['BasecallSpeed']
_N50 = DESCRIPTOR.message_types_by_name['N50']
_STREAMINSTANCEACTIVITYRESPONSE = DESCRIPTOR.message_types_by_name['StreamInstanceActivityResponse']
_STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH = _STREAMINSTANCEACTIVITYRESPONSE.nested_types_by_name['FlowCellHealth']
_STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH_CHANNELSTATEPERCENTAGESENTRY = _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH.nested_types_by_name['ChannelStatePercentagesEntry']
_GETVERSIONINFORESPONSE_DISTRIBUTIONSTATUS = _GETVERSIONINFORESPONSE.enum_types_by_name['DistributionStatus']
_GETVERSIONINFORESPONSE_INSTALLATIONTYPE = _GETVERSIONINFORESPONSE.enum_types_by_name['InstallationType']
GetVersionInfoRequest = _reflection.GeneratedProtocolMessageType('GetVersionInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETVERSIONINFOREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.GetVersionInfoRequest)
  })
_sym_db.RegisterMessage(GetVersionInfoRequest)

GetVersionInfoResponse = _reflection.GeneratedProtocolMessageType('GetVersionInfoResponse', (_message.Message,), {

  'MinknowVersion' : _reflection.GeneratedProtocolMessageType('MinknowVersion', (_message.Message,), {
    'DESCRIPTOR' : _GETVERSIONINFORESPONSE_MINKNOWVERSION,
    '__module__' : 'minknow_api.instance_pb2'
    # @@protoc_insertion_point(class_scope:minknow_api.instance.GetVersionInfoResponse.MinknowVersion)
    })
  ,
  'DESCRIPTOR' : _GETVERSIONINFORESPONSE,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """Attributes:
      minknow:
          What minknow version is installed. Split into major, minor and
          patch versions Also includes the full version as a string,
          which contain the major, minor and patch numbers as well as if
          the version is pre-release version (-pre), whether it is a
          release candidate (-rc#) or whether it is a variant version
          (i.e. for conferences) (-variant). For non-release builds it
          also  includes the hash of the commit it is based on, and
          whether the working copy is different from that has (-dirty)
      bream:
          The version of Bream that is installed.  An invalid
          installation will cause this to return "0.0.0".  Prior to 5.0,
          this field was called "protocols".  Since 5.0
      distribution_version:
          Describes the distribution that this MinKNOW installation is
          part of, usually this will be the Metapackage version
          number/identity, this will be "unknown" if the distribution-
          version hasn't been set. This information is also communicated
          in the Manager's DaemonMessage in daemon.proto
      distribution_status:
          Indicates if the MinKNOW distribution including components
          such as Bream are stable, unstable or have been modified.
      protocol_configuration:
          The version of the protocol configuration files that is
          installed.  An invalid installation will cause this to return
          "0.0.0".  Prior to 5.0, this field was called "configuration".
          Since 5.0
      installation_type:
          The installation type of MinKNOW.  The installation type may
          affect the available features, or the update process.  Since
          4.1
      guppy_build_version:
          Version of guppy MinKNOW was packaged against.  Since 5.0
      guppy_connected_version:
          Version of guppy MinKNOW running with.  Since 5.0
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.GetVersionInfoResponse)
  })
_sym_db.RegisterMessage(GetVersionInfoResponse)
_sym_db.RegisterMessage(GetVersionInfoResponse.MinknowVersion)

GetOutputDirectoriesRequest = _reflection.GeneratedProtocolMessageType('GetOutputDirectoriesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETOUTPUTDIRECTORIESREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.GetOutputDirectoriesRequest)
  })
_sym_db.RegisterMessage(GetOutputDirectoriesRequest)

OutputDirectories = _reflection.GeneratedProtocolMessageType('OutputDirectories', (_message.Message,), {
  'DESCRIPTOR' : _OUTPUTDIRECTORIES,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """Attributes:
      output:
          The base output directory. Anything that is output to files is
          branched from this directory.
      log:
          Directory where logs will be stored.
      reads:
          Base directory where reads will be outputted.
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.OutputDirectories)
  })
_sym_db.RegisterMessage(OutputDirectories)

GetDefaultOutputDirectoriesRequest = _reflection.GeneratedProtocolMessageType('GetDefaultOutputDirectoriesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETDEFAULTOUTPUTDIRECTORIESREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.GetDefaultOutputDirectoriesRequest)
  })
_sym_db.RegisterMessage(GetDefaultOutputDirectoriesRequest)

SetOutputDirectoryRequest = _reflection.GeneratedProtocolMessageType('SetOutputDirectoryRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETOUTPUTDIRECTORYREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.SetOutputDirectoryRequest)
  })
_sym_db.RegisterMessage(SetOutputDirectoryRequest)

SetOutputDirectoryResponse = _reflection.GeneratedProtocolMessageType('SetOutputDirectoryResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETOUTPUTDIRECTORYRESPONSE,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.SetOutputDirectoryResponse)
  })
_sym_db.RegisterMessage(SetOutputDirectoryResponse)

SetReadsDirectoryRequest = _reflection.GeneratedProtocolMessageType('SetReadsDirectoryRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETREADSDIRECTORYREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.SetReadsDirectoryRequest)
  })
_sym_db.RegisterMessage(SetReadsDirectoryRequest)

SetReadsDirectoryResponse = _reflection.GeneratedProtocolMessageType('SetReadsDirectoryResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETREADSDIRECTORYRESPONSE,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.SetReadsDirectoryResponse)
  })
_sym_db.RegisterMessage(SetReadsDirectoryResponse)

FilesystemDiskSpaceInfo = _reflection.GeneratedProtocolMessageType('FilesystemDiskSpaceInfo', (_message.Message,), {
  'DESCRIPTOR' : _FILESYSTEMDISKSPACEINFO,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """disk-usage information for one file-system
  
  Attributes:
      filesystem_id:
          The name of the file-system
      bytes_available:
          How much space is left on the file-system
      bytes_capacity:
          The total capacity of the file-system when empty.
      what:
          A list of what MinKNOW stores on this file-system, eg: reads,
          logs, intermediate-files
      bytes_to_stop_cleanly:
          MinKNOW needs this much space to stop an experiment. If
          bytes_available goes below this number, data could be lost!
      bytes_when_alert_issued:
          The amount of space left on the file-system when
          recommend_alert was set true.
      recommend_alert:
          MinKNOW recommends that you alert someone about the disk-usage
      recommend_stop:
          MinKNOW recommends that you stop the experiment due to disk-
          usage concerns
      bytes_per_second:
          Rate of change in bytes_available (per second) +'ve numbers
          indicate that bytes_available is decreasing and space is being
          used A value of 0 can indicate that this has not applicable or
          not available.
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.FilesystemDiskSpaceInfo)
  })
_sym_db.RegisterMessage(FilesystemDiskSpaceInfo)

GetDiskSpaceInfoRequest = _reflection.GeneratedProtocolMessageType('GetDiskSpaceInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETDISKSPACEINFOREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.GetDiskSpaceInfoRequest)
  })
_sym_db.RegisterMessage(GetDiskSpaceInfoRequest)

StreamDiskSpaceInfoRequest = _reflection.GeneratedProtocolMessageType('StreamDiskSpaceInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _STREAMDISKSPACEINFOREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """Attributes:
      period:
          Disk space information will be streamed with this value
          determining the period in seconds between updates. A period of
          0 is invalid
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.StreamDiskSpaceInfoRequest)
  })
_sym_db.RegisterMessage(StreamDiskSpaceInfoRequest)

GetDiskSpaceInfoResponse = _reflection.GeneratedProtocolMessageType('GetDiskSpaceInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETDISKSPACEINFORESPONSE,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.GetDiskSpaceInfoResponse)
  })
_sym_db.RegisterMessage(GetDiskSpaceInfoResponse)

GetMachineIdRequest = _reflection.GeneratedProtocolMessageType('GetMachineIdRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETMACHINEIDREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.GetMachineIdRequest)
  })
_sym_db.RegisterMessage(GetMachineIdRequest)

GetMachineIdResponse = _reflection.GeneratedProtocolMessageType('GetMachineIdResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETMACHINEIDRESPONSE,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """Attributes:
      machine_id:
          The machine_id MinKNOW uses for this host.
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.GetMachineIdResponse)
  })
_sym_db.RegisterMessage(GetMachineIdResponse)

StreamInstanceActivityRequest = _reflection.GeneratedProtocolMessageType('StreamInstanceActivityRequest', (_message.Message,), {
  'DESCRIPTOR' : _STREAMINSTANCEACTIVITYREQUEST,
  '__module__' : 'minknow_api.instance_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.instance.StreamInstanceActivityRequest)
  })
_sym_db.RegisterMessage(StreamInstanceActivityRequest)

DeviceInfo = _reflection.GeneratedProtocolMessageType('DeviceInfo', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEINFO,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """Attributes:
      device_state:
          The current state of the device
      device_info:
          Information about the connected device (or no content if
          disconnected see: device_state)
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.DeviceInfo)
  })
_sym_db.RegisterMessage(DeviceInfo)

BasecallSpeed = _reflection.GeneratedProtocolMessageType('BasecallSpeed', (_message.Message,), {
  'DESCRIPTOR' : _BASECALLSPEED,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """Attributes:
      mean_basecall_speed:
          Mean basecall speed, in bases per second.  This value is only
          streamed for acquisitions where basecalling is enabled.  The
          value reported here is the value stored in last completed
          basecall boxplot bucket Each boxplot bucket covers a duration
          of `boxplot_time_coverage_in_minutes`
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.BasecallSpeed)
  })
_sym_db.RegisterMessage(BasecallSpeed)

N50 = _reflection.GeneratedProtocolMessageType('N50', (_message.Message,), {
  'DESCRIPTOR' : _N50,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """Attributes:
      n50:
          N50 data, in basecalled bases  This value is only streamed for
          acquisitions where basecalling is enabled.  The latest value
          is sent once per minute
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.N50)
  })
_sym_db.RegisterMessage(N50)

StreamInstanceActivityResponse = _reflection.GeneratedProtocolMessageType('StreamInstanceActivityResponse', (_message.Message,), {

  'FlowCellHealth' : _reflection.GeneratedProtocolMessageType('FlowCellHealth', (_message.Message,), {

    'ChannelStatePercentagesEntry' : _reflection.GeneratedProtocolMessageType('ChannelStatePercentagesEntry', (_message.Message,), {
      'DESCRIPTOR' : _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH_CHANNELSTATEPERCENTAGESENTRY,
      '__module__' : 'minknow_api.instance_pb2'
      # @@protoc_insertion_point(class_scope:minknow_api.instance.StreamInstanceActivityResponse.FlowCellHealth.ChannelStatePercentagesEntry)
      })
    ,
    'DESCRIPTOR' : _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH,
    '__module__' : 'minknow_api.instance_pb2'
    ,
    '__doc__': """Attributes:
        channel_state_percentages:
            Map between channel state name and a percentage of how much
            time that state has been active with respect to all other
            channel states  This is over one minute of time this is
            calculated over
    """,
    # @@protoc_insertion_point(class_scope:minknow_api.instance.StreamInstanceActivityResponse.FlowCellHealth)
    })
  ,
  'DESCRIPTOR' : _STREAMINSTANCEACTIVITYRESPONSE,
  '__module__' : 'minknow_api.instance_pb2'
  ,
  '__doc__': """Attributes:
      device_info:
          Information about whether the device is connected or not, and
          if it is, gives information about the connected device
      flow_cell_info:
          Information about the currently connected flow cell  Note: if
          no flow cell is connected this [flow_cell_info.has_flow_cell]
          will be false
      protocol_run_info:
          Information about the in progress protocol.  Note if no
          protocol is active this message will not be present.
      acquisition_run_info:
          Information about the current acquisition run  Note if no
          acquisition is active the message will not be present.
      flow_cell_health:
          Information about the health of the flow cell within the
          current run  Note: only available if a run is in progress
      yield_summary:
          Acquisition yield information. Describes information such as
          number of reads, what number of those reads have passed or
          failed basecalling etc. Rate  limited to 1 second per update
      basecall_speed:
          Basecall speed information Note: only available if an
          acquisition with basecalling enabled is in progress
      n50:
          n50 information  Contains the n50 value, measured in
          basecalled bases  Note: only available if an acquisition with
          basecalling enabled is in progress
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.instance.StreamInstanceActivityResponse)
  })
_sym_db.RegisterMessage(StreamInstanceActivityResponse)
_sym_db.RegisterMessage(StreamInstanceActivityResponse.FlowCellHealth)
_sym_db.RegisterMessage(StreamInstanceActivityResponse.FlowCellHealth.ChannelStatePercentagesEntry)

_INSTANCESERVICE = DESCRIPTOR.services_by_name['InstanceService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\034com.nanoporetech.minknow_api\242\002\005MKAPI'
  _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH_CHANNELSTATEPERCENTAGESENTRY._options = None
  _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH_CHANNELSTATEPERCENTAGESENTRY._serialized_options = b'8\001'
  _INSTANCESERVICE.methods_by_name['get_version_info']._options = None
  _INSTANCESERVICE.methods_by_name['get_version_info']._serialized_options = b'\220\002\001'
  _INSTANCESERVICE.methods_by_name['get_output_directories']._options = None
  _INSTANCESERVICE.methods_by_name['get_output_directories']._serialized_options = b'\220\002\001'
  _INSTANCESERVICE.methods_by_name['get_default_output_directories']._options = None
  _INSTANCESERVICE.methods_by_name['get_default_output_directories']._serialized_options = b'\220\002\001'
  _INSTANCESERVICE.methods_by_name['set_output_directory']._options = None
  _INSTANCESERVICE.methods_by_name['set_output_directory']._serialized_options = b'\220\002\002'
  _INSTANCESERVICE.methods_by_name['set_reads_directory']._options = None
  _INSTANCESERVICE.methods_by_name['set_reads_directory']._serialized_options = b'\220\002\002'
  _INSTANCESERVICE.methods_by_name['get_disk_space_info']._options = None
  _INSTANCESERVICE.methods_by_name['get_disk_space_info']._serialized_options = b'\220\002\001'
  _INSTANCESERVICE.methods_by_name['stream_disk_space_info']._options = None
  _INSTANCESERVICE.methods_by_name['stream_disk_space_info']._serialized_options = b'\220\002\001'
  _INSTANCESERVICE.methods_by_name['get_machine_id']._options = None
  _INSTANCESERVICE.methods_by_name['get_machine_id']._serialized_options = b'\220\002\001'
  _INSTANCESERVICE.methods_by_name['stream_instance_activity']._options = None
  _INSTANCESERVICE.methods_by_name['stream_instance_activity']._serialized_options = b'\220\002\001'
  _GETVERSIONINFOREQUEST._serialized_start=137
  _GETVERSIONINFOREQUEST._serialized_end=160
  _GETVERSIONINFORESPONSE._serialized_start=163
  _GETVERSIONINFORESPONSE._serialized_end=819
  _GETVERSIONINFORESPONSE_MINKNOWVERSION._serialized_start=590
  _GETVERSIONINFORESPONSE_MINKNOWVERSION._serialized_end=665
  _GETVERSIONINFORESPONSE_DISTRIBUTIONSTATUS._serialized_start=667
  _GETVERSIONINFORESPONSE_DISTRIBUTIONSTATUS._serialized_end=740
  _GETVERSIONINFORESPONSE_INSTALLATIONTYPE._serialized_start=742
  _GETVERSIONINFORESPONSE_INSTALLATIONTYPE._serialized_end=819
  _GETOUTPUTDIRECTORIESREQUEST._serialized_start=821
  _GETOUTPUTDIRECTORIESREQUEST._serialized_end=850
  _OUTPUTDIRECTORIES._serialized_start=852
  _OUTPUTDIRECTORIES._serialized_end=915
  _GETDEFAULTOUTPUTDIRECTORIESREQUEST._serialized_start=917
  _GETDEFAULTOUTPUTDIRECTORIESREQUEST._serialized_end=953
  _SETOUTPUTDIRECTORYREQUEST._serialized_start=955
  _SETOUTPUTDIRECTORYREQUEST._serialized_end=996
  _SETOUTPUTDIRECTORYRESPONSE._serialized_start=998
  _SETOUTPUTDIRECTORYRESPONSE._serialized_end=1026
  _SETREADSDIRECTORYREQUEST._serialized_start=1028
  _SETREADSDIRECTORYREQUEST._serialized_end=1068
  _SETREADSDIRECTORYRESPONSE._serialized_start=1070
  _SETREADSDIRECTORYRESPONSE._serialized_end=1097
  _FILESYSTEMDISKSPACEINFO._serialized_start=1100
  _FILESYSTEMDISKSPACEINFO._serialized_end=1350
  _GETDISKSPACEINFOREQUEST._serialized_start=1352
  _GETDISKSPACEINFOREQUEST._serialized_end=1377
  _STREAMDISKSPACEINFOREQUEST._serialized_start=1379
  _STREAMDISKSPACEINFOREQUEST._serialized_end=1423
  _GETDISKSPACEINFORESPONSE._serialized_start=1425
  _GETDISKSPACEINFORESPONSE._serialized_end=1534
  _GETMACHINEIDREQUEST._serialized_start=1536
  _GETMACHINEIDREQUEST._serialized_end=1557
  _GETMACHINEIDRESPONSE._serialized_start=1559
  _GETMACHINEIDRESPONSE._serialized_end=1601
  _STREAMINSTANCEACTIVITYREQUEST._serialized_start=1603
  _STREAMINSTANCEACTIVITYREQUEST._serialized_end=1634
  _DEVICEINFO._serialized_start=1637
  _DEVICEINFO._serialized_end=1791
  _BASECALLSPEED._serialized_start=1793
  _BASECALLSPEED._serialized_end=1837
  _N50._serialized_start=1839
  _N50._serialized_end=1857
  _STREAMINSTANCEACTIVITYRESPONSE._serialized_start=1860
  _STREAMINSTANCEACTIVITYRESPONSE._serialized_end=2675
  _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH._serialized_start=2445
  _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH._serialized_end=2659
  _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH_CHANNELSTATEPERCENTAGESENTRY._serialized_start=2597
  _STREAMINSTANCEACTIVITYRESPONSE_FLOWCELLHEALTH_CHANNELSTATEPERCENTAGESENTRY._serialized_end=2659
  _INSTANCESERVICE._serialized_start=2678
  _INSTANCESERVICE._serialized_end=3834
# @@protoc_insertion_point(module_scope)
