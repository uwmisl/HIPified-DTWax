#!/bin/bash

# Parse arguments (ref_len, query_len, num_reads, -debug, -segment_size, -query_batch_size)
debug_flag="" segment_size=1 query_batch_size=64
ref_len="" query_len="" num_reads=""

while [ $# -gt 0 ]; do
  case $1 in
    -debug) debug_flag="debug"; shift ;;
    -segment_size) segment_size=$2; shift 2 ;;
    -query_batch_size) query_batch_size=$2; shift 2 ;;
    -ref_len) ref_len=$2; shift 2 ;;
    -query_len) query_len=$2; shift 2 ;;
    -num_reads) num_reads=$2; shift 2 ;;
    *)
      echo "Error: Unknown argument '$1'" >&2
      exit 1
      ;;
  esac
done

# Check if required arguments are provided
if [ -z "$ref_len" ] || [ -z "$query_len" ] || [ -z "$num_reads" ]; then
  echo "Error: Missing required arguments (-ref_len, -query_len, -num_reads)." >&2
  exit 1
fi

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
script_name=$(basename "$0")
script_path="$script_dir/$script_name"

# Define output path for the header file
src_dir="$script_dir/../src"
output_file="$src_dir/include/data_dims.hpp"

# Write precompiler directives to data_dims.hpp
cat <<EOL > "$output_file"
/*
This file has been autogenerated by $script_path.
*/

#ifndef DATA_DIMS_HPP
#define DATA_DIMS_HPP

#define WARP_SIZE 64
#define QUERY_BATCH_SIZE $query_batch_size
#define SEGMENT_SIZE $segment_size
#define REF_LEN $ref_len
#define QUERY_LEN $query_len
#define NUM_READS $num_reads

#define REF_TILE_SIZE (SEGMENT_SIZE * WARP_SIZE)
#define REF_BATCH (REF_LEN / REF_TILE_SIZE)
#define QUERY_BATCH (QUERY_LEN / QUERY_BATCH_SIZE)
#define NUM_WAVES (QUERY_BATCH_SIZE + (REF_TILE_SIZE - 1) / (SEGMENT_SIZE))
#define WARP_SIZE_MINUS_ONE (WARP_SIZE - 1)
#define NUM_WAVES_BY_WARP_SIZE ((NUM_WAVES / WARP_SIZE) * WARP_SIZE)
#define REF_BATCH_MINUS_ONE (REF_BATCH - 1)
#define TWICE_WARP_SIZE_MINUS_ONE ((2 * WARP_SIZE) - 1)
#define RESULT_REG (SEGMENT_SIZE - 1)

#endif // DATA_DIMS_HPP
EOL

# Move to src directory and run make
if ! cd "$src_dir"; then
  echo "Error: Directory $src_dir not found. Build failed."  >&2
  exit 1
fi

# Run make
if make clean; make $debug_flag; then
  echo -e "Successfully built.\n"
else
  echo "Error: Build failed."  >&2
  exit 1
fi
